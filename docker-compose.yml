version: "3"
services:
  example-prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: example-prometheus
    ports:
      - 9090:9090
    volumes:
      - "./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
    networks:
      services-network:
        aliases:
          - example-prometheus

  app:
    container_name: app
    restart: on-failure
    build:
      context: .
      dockerfile: ./inference/Dockerfile
    environment:
      PYTHONPATH: /src
      DEBUG_METRICS: "false"
      DB_URI: "postgresql://admin:admin@database:5432/sqlalchemy"
    env_file:
      - ./.env
    volumes:
      - .:/src
    ports:
      - 1000:10000
    networks:
      services-network:
        aliases:
          - app

  example-grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "472"
    container_name: example-grafana
    depends_on:
      - example-prometheus
    ports:
      - 3000:3000
    volumes:
      - ./monitoring/datasource.yml:/etc/grafana/provisioning/datasource.yml
    env_file:
      - ./monitoring/config.monitoring
    networks:
      services-network:
        aliases:
          - example-grafana

networks:
  services-network:
    name: services-network
    driver: bridge
